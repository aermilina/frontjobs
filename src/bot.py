import logging
import os
from logging.handlers import RotatingFileHandler
from telegram import Bot
from telegram.constants import ParseMode
from telegram.error import TelegramError
from constants import TELEGRAM_TOKEN, CHANNEL_ID
import random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_level = os.getenv('LOG_LEVEL', 'INFO').upper()
logger = logging.getLogger(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤
log_dir = "logs"
if not os.path.exists(log_dir):
    os.makedirs(log_dir)

log_file = os.path.join(log_dir, "bot.log")
handler = RotatingFileHandler(log_file, maxBytes=5*1024*1024, backupCount=5)  # 5 MB –Ω–∞ —Ñ–∞–π–ª, 5 —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
logging.basicConfig(
    level=getattr(logging, log_level, logging.INFO),
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    handlers=[
        logging.StreamHandler(),  # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
        handler  # –†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤ –≤ —Ñ–∞–π–ª
    ]
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TELEGRAM_TOKEN)

async def get_updates() -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram –±–æ—Ç–∞.
    """
    try:
        updates = await bot.get_updates()
        for update in updates:
            if update.message and update.message.chat:
                logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —á–∞—Ç–∞: {update.message.chat.id}")
            else:
                logger.debug("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ —á–∞—Ç–∞")
    except TelegramError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")

async def send_selfpromo() -> None:
    messages = [
        "üöÄ *Looking for a remote frontend job?*\n\n"
        "We post fresh frontend positions daily from multiple trusted sources.\n\n"
        "üëâ Subscribe now: @FrontendinRemote",

        "üë®‚Äçüíª *Tired of searching job boards?*\n\n"
        "Get hand-picked remote frontend jobs delivered right here.\n\n"
        "*Join the channel:* @FrontendinRemote",

        "üìå *Daily remote frontend jobs.*\n"
        "*Just jobs. No spam.*\n\n"
        "Follow: @FrontendinRemote",

        "üßë‚Äçüíª *Hey frontend devs!*\n\n"
        "We collect remote jobs from Remote OK, Remotive, We Work Remotely, Hiring Cafe, and other trusted sources ‚Äî so you don't have to\n\n"
        "Stay updated: @FrontendinRemote"
    ]
    try:
        message = random.choice(messages)
        response = await bot.send_message(
            chat_id=CHANNEL_ID,
            text=message,
            parse_mode=ParseMode.MARKDOWN,
            disable_web_page_preview=True
        )
        logger.info(f"–°–∞–º–æ—Ä–µ–∫–ª–∞–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: {response.message_id}")
    except TelegramError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–∞–º–æ—Ä–µ–∫–ª–∞–º—ã: {e}")
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∞–º–æ—Ä–µ–∫–ª–∞–º–µ: {e}")

async def send_message(message: str) -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –∫–∞–Ω–∞–ª.
    
    :param message: –ì–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown.
    """
    try:
        response = await bot.send_message(
            chat_id=CHANNEL_ID,
            text=message,
            parse_mode=ParseMode.MARKDOWN,
            disable_web_page_preview=True
        )
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª {CHANNEL_ID}: {response.message_id}")
    except TelegramError as e:
        logger.error(f"–û—à–∏–±–∫–∞ Telegram –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")